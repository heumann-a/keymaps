/* Copyright 2022 splitkb.com <support@splitkb.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include QMK_KEYBOARD_H
#include "keymap_german.h"
#include "keyrecords/combos.h"
#include "keyrecords/keycodes.h" 

#ifdef OLED_ENABLE
    #include "oled/oled.h"
#endif
#ifdef OCEAN_DREAM_ENABLE
    #include "oled/ocean_dream.h"
#endif
#ifdef LUNA_ENABLE
    #include "oled/luna.h"
#endif

/* TEMPLATE
     * ,-----------------------------------------------.                     ,------------------------------------------------.
     * |      |      |        |        |        |      |                    |      |        |        |         |      |      |
     * |------+------+--------+--------+--------+------|                    |------+--------+--------+---------+------+------|
     * |      |      |        |        |        |      |                    |      |    ü   |        |    ö    |      |      |
     * |------+------+--------+--------+--------+------|                    |------+--------+--------+---------+------+------|
     * |      |   ä  |        |        |        |      |-------.    ,-------|      |        |        |         |      |      |
     * |------+------+--------+--------+--------+------|       |    |       |------+--------+--------+---------+------+------|
     * |      |      |        |        |        |      |-------|    |-------|      |        |        |         |      |      |
     *  -----------------------------------------------/       /             -----------------------------------------------'
     *                          |      |      |      | /      /       \      \  |      |      |      |
     *                          |      |      ||||||||/       /         \      \ |      ||||||||      |
     *                          `----------------------------'           '------''--------------------'
     *
    [_TEMPLATE] = LAYOUT(
    // ,-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
        ____, ____, ____, ____, ____, ____,                                                                                 ____, ____, ____, ____, ____, ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____, ____, ____, ____, ____, ____,                                                                                 ____, ____, ____, ____, ____, ____,   
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____, ____, ____, ____, ____, ____,                                                                                 ____, ____, ____, ____, ____, ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____, ____, ____, ____, ____, ____, ____,                                                                     ____, ____, ____, ____, ____, ____, ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
                    ____, ____, ____, ____,                                                                                     ____, ____, ____, ____
*/

enum layers {
    // Default LAYERS
    _QWERTZ = 0,
    _NAVIGATION,
    _NUMPAD,
};



const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
    
    [_QWERTZ] = LAYOUT(
    // ,-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
        QK_GESC,    KC_1,           KC_2,           KC_3,           KC_4,           KC_5,                                   KC_6,           KC_7,           KC_8,           KC_9,           KC_0,           KC_PSCR,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        KC_TAB,     KC_Q,           KC_W,           KC_E,           KC_R,           KC_T,                                   DE_Z,           KC_U,           KC_I,           KC_O,           KC_P,           DE_HASH,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        KC_LSFT,    LGUI_T(KC_A),   LALT_T(KC_S),   LCTL_T(KC_D),   LSFT_T(KC_F),   KC_G,                                   KC_H,           RSFT_T(KC_J),   RCTL_T(KC_K),   RALT_T(KC_L),   RGUI_T(DE_SS),  KC_RSFT,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        KC_LCTL,    DE_Y,           KC_X,           KC_C,           KC_V,           KC_B, LT(_MEDIA,KC_PGUP),&  KC_PGDN,    KC_N,           KC_M,           DE_COMM,        DE_DOT, D       DE_MINS,        KC_RCTL,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
                KC_RCMD, TT(_RACING),  KC_LALT,  BSPLT(_NUMPAD),                                                               SPLT(_RAISE), KC_RALT, KC_ENTER, KC_DEL
    ),

    // NAVIGATION  
    [_NAVIGATION] = LAYOUT(
    // ,-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
        ____, ____, ____, ____, ____, ____,                                                                                 ____, ____, ____, ____, ____, ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____, ____, ____, ____, ____, ____,                                                                                 ____, ____, KC_UP, ____, ____, ____,   
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____, ____, ____, ____, ____, ____,                                                                                 ____, KC_LEFT, KC_DOWN, KC_RIGHT, ____, ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____, ____, ____, ____, ____, ____, ____,                                                                     ____, ____, ____, ____, ____, ____, ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
                    ____, ____, ____, ____,                                                                                     ____, ____, ____, ____
    ),

    // NUMPAD
    [_NUMPAD] = LAYOUT(
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____,       ____,       ____,       ____,       ____,       ____,                                           ____,       ____,       ____,       ____,       KC_PSLS,        ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____,       ____,       ____,       ____,       ____,       ____,                                           KC_NUM,     KC_P7,      KC_P8,      KC_P9,      KC_PAST,        ____,   
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____,       ____,       ____,       ____,       ____,       ____,                                           ____,       KC_P4,      KC_P5,      KC_P6,      KC_PMNS,        ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____,       ____,       ____,       ____,       ____,       ____,       ____,                   ____,       ____,       KC_P1,      KC_P2,      KC_P3,      KC_PPLS,        ____,
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
                ____,       ____,       ____,       ____,                                                               ____,   KC_P0,      ____,       DE_DOT
    ), 

    [_MEDIA] = LAYOUT(
    // |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        ____, KC_MUTE, ____, ____, ____, ____,                      ____, ____, ____, ____, ____, ____,
        ____, KC_VOLU, KC_MPRV, KC_MPLY, KC_MNXT, ____,             ____, ____, ____, ____, ____, ____,   
        ____, KC_VOLD, ____, ____, ____, ____,                      ____, ____, ____, ____, ____, ____,
        ____, ____, KC_CALC, KC_COPY, KC_PASTE, ____, ____,         ____, ____, ____, ____, ____, ____, ____,
            ____, ____, ____, ____,                                     ____, ____, ____, ____

    ), 
};

    


#if defined(RGBLIGHT_ENABLE) || defined(RGB_MATRIX_ENABLE)
void keyboard_post_init_user(void) {
    rgb_matrix_enable_noeeprom();
    rgb_matrix_sethsv_noeeprom(HSV_SPRINGGREEN);
    rgb_matrix_mode_noeeprom(RGB_MATRIX_BREATHING);
}

layer_state_t layer_state_set_user(layer_state_t state) {
    switch (get_highest_layer(state)) {
    case _RACING:
        rgb_matrix_sethsv (HSV_PURPLE); 
        rgb_matrix_mode_noeeprom(RGB_MATRIX_MULTISPLASH);
        break;
    case _MEDIA:
        rgb_matrix_sethsv (HSV_CORAL);
        rgb_matrix_mode_noeeprom(RGB_MATRIX_SOLID_COLOR); 
        break;
    case _RAISE:
        rgb_matrix_sethsv (HSV_RED);
        rgb_matrix_mode_noeeprom(RGB_MATRIX_SOLID_COLOR); 
        break;
    default: //  for any other layers, or the default layer
    case _QWERTZ:
        rgblight_sethsv (HSV_SPRINGGREEN);
        rgb_matrix_mode_noeeprom(RGB_MATRIX_BREATHING);
        break;
    }
  return state;
}

#endif


#ifdef OLED_ENABLE

bool oled_task_user(void) {
    // A 128x32 OLED rotated 90 degrees is 5 characters wide and 16 characters tall

    if(!oled_timeout_housekeeping()) {
        return false;
    }
    
    if (is_keyboard_master()){
        enum layers current_active = IS_LAYER_ON(_RACING) ? _RACING : _QWERTZ;
        current_active = IS_LAYER_ON(_RAISE) ? _RAISE : current_active;

        switch (current_active) {
            case _RACING:
                render_car();
                break;
            case _NAVIGATION:
                render_navigation();
                break;
            case _MEDIA:
                render_media();
                break;
            default:
            case _QWERTZ:
                // Or use the write_ln shortcut over adding '\n' to the end of your string
                render_home();
        }

        render_empty_line();
        // Host Keyboard Status
        led_t led_state = host_keyboard_led_state();
        oled_write_P(led_state.num_lock ? PSTR("NUM\n") : PSTR("    "), false);
        oled_write_P(led_state.caps_lock ? PSTR("CAP\n") : PSTR("    "), false);
        oled_write_P(led_state.scroll_lock ? PSTR("SCR\n") : PSTR("    "), false);
        
        #ifdef LUNA_ENABLE
        render_luna(0,13);
        #endif

    } else {

        #ifdef OCEAN_DREAM_ENABLE
        render_stars();
        #endif

    }

    return false;
}

#endif
